{"version":3,"file":"js/CommonsChunk/bridge.js","sources":["webpack:///node_modules/core-js/fn/promise.js","webpack:///node_modules/core-js/modules/_invoke.js","webpack:///node_modules/core-js/modules/_microtask.js","webpack:///node_modules/core-js/modules/_species-constructor.js","webpack:///node_modules/core-js/modules/es6.promise.js","webpack:///node_modules/core-js/modules/_task.js","webpack:///node_modules/gome-bridge/index.js"],"sourcesContent":["require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/_core').Promise;\n\n\n// WEBPACK FOOTER //\n// node_modules/core-js/fn/promise.js","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n\n\n// WEBPACK FOOTER //\n// node_modules/core-js/modules/_invoke.js","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process';\n\nmodule.exports = function(){\n  var head, last, notify;\n\n  var flush = function(){\n    var parent, fn;\n    if(isNode && (parent = process.domain))parent.exit();\n    while(head){\n      fn   = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch(e){\n        if(head)notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if(parent)parent.enter();\n  };\n\n  // Node.js\n  if(isNode){\n    notify = function(){\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver\n  } else if(Observer){\n    var toggle = true\n      , node   = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n    notify = function(){\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if(Promise && Promise.resolve){\n    var promise = Promise.resolve();\n    notify = function(){\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function(){\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function(fn){\n    var task = {fn: fn, next: undefined};\n    if(last)last.next = task;\n    if(!head){\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n// WEBPACK FOOTER //\n// node_modules/core-js/modules/_microtask.js","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n// WEBPACK FOOTER //\n// node_modules/core-js/modules/_species-constructor.js","'use strict';\nvar LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')()\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , process            = global.process\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar USE_NATIVE = !!function(){\n  try {\n    // correct subclassing with @@species support\n    var promise     = $Promise.resolve(1)\n      , FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function(exec){ exec(empty, empty); };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch(e){ /* empty */ }\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , domain  = reaction.domain\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if(handler === true)result = value;\n          else {\n            if(domain)domain.enter();\n            result = handler(value);\n            if(domain)domain.exit();\n          }\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    var value = promise._v\n      , abrupt, handler, console;\n    if(isUnhandled(promise)){\n      abrupt = perform(function(){\n        if(isNode){\n          process.emit('unhandledRejection', value, promise);\n        } else if(handler = global.onunhandledrejection){\n          handler({promise: promise, reason: value});\n        } else if((console = global.console) && console.error){\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if(abrupt)throw abrupt.error;\n  });\n};\nvar isUnhandled = function(promise){\n  if(promise._h == 1)return false;\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail   = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = []\n        , index     = 0\n        , remaining = 1;\n      forOf(iterable, false, function(promise){\n        var $index        = index++\n          , alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled  = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n\n\n// WEBPACK FOOTER //\n// node_modules/core-js/modules/es6.promise.js","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n\n\n// WEBPACK FOOTER //\n// node_modules/core-js/modules/_task.js","/*\r\n * @Author: zhaoye \r\n * @Date: 2017-01-03 19:47:26\r\n * @Last Modified by: zhaoye\r\n * @Last Modified time: 2017-07-13 14:31:31\r\n */\r\nimport 'core-js/fn/map'\r\nimport 'core-js/fn/promise'\r\n\r\nimport Base64 from 'gome-utils-base64'\r\nimport eventbus from 'gome-utils-eventbus'\r\nimport {env, system} from 'gome-utils-env'\r\nimport cookie from 'gome-utils-cookie'\r\nimport query from 'gome-utils-query'\r\nimport http from 'gome-utils-http'\r\nimport version from 'gome-utils-app-version'\r\nimport host  from 'gome-utils-host'\r\nfunction cb (cb, promisecb, ...params) {\r\n    if(cb)cb(...params);\r\n    if(promisecb)promisecb(...params);\r\n}\r\n//老bridge的代理\r\nclass OldBridgeProxy{\r\n    _setBridge (bridge){\r\n        this._bridge = bridge;\r\n    }\r\n    send (msg, info){\r\n        return new Promise(function(resolve, reject){\r\n            //没消息名时\r\n            if(typeof info == 'undefined' && typeof msg != 'undefined'){\r\n                info = msg;\r\n                if(typeof info == 'string'){\r\n                    throw new Error('消息体必须是json对象而不是json字符串');\r\n                    return;\r\n                }\r\n                if(system.ios){\r\n                    this._bridge.callHandler('send', JSON.stringify(info));\r\n                }else if(system.android){\r\n                    this._bridge.send(JSON.stringify(info));\r\n                }\r\n            }\r\n            //有消息名时\r\n            if(typeof msg == 'string' && typeof info != 'undefined'){\r\n                if(typeof info == 'string'){\r\n                    throw new Error('消息体必须是json对象而不是json字符串');\r\n                    return;\r\n                }\r\n                if(system.ios){\r\n                    this._bridge.callHandler(msg, JSON.stringify(info));\r\n                }else if(system.android){\r\n                    this._bridge.send(msg, JSON.stringify(info));\r\n                }\r\n            }\r\n            resolve();\r\n        }.bind(this));\r\n    }\r\n}\r\nclass GomeJSBridge {\r\n    constructor () {\r\n        this._userInfo = null;\r\n\r\n        this.Promise = Promise;\r\n\r\n        this.http = http;\r\n        this.cookie = cookie;\r\n        this.query = query;\r\n        this.env = env;\r\n        this.system = system;\r\n        this.host = host;\r\n        \r\n        this.emit = eventbus.emit;\r\n        this.emitDOM = eventbus.emitDOM;\r\n        this.on = eventbus.on;\r\n        this.off = eventbus.off;\r\n\r\n        this.deprecated = new OldBridgeProxy;\r\n    }\r\n    mixin (dest, src) {\r\n        for (let key in src) {\r\n            if (typeof dest[key] == 'undefined') {\r\n                dest[key] = src[key];\r\n            }\r\n        }\r\n        return dest\r\n    }\r\n    back (opts, ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(!env.hybrid){\r\n                window.location.back();\r\n                cb(ok, resolve);\r\n            }else if(env.hybrid || env.dev){\r\n                navigator.gome.util.nativeUtils.nativeFinish( () => {\r\n                    cb(ok, resolve);\r\n                }, () => {\r\n                    cb(fail, resolve);\r\n                },opts || {});\r\n            }\r\n        }));\r\n    }\r\n    getAddress (opts, ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(env.hybrid){\r\n                navigator.gome.util.nativeUtils.getAddressFourArea(function(data){\r\n                    data = typeof data === 'string' ? JSON.parse(data) : data;\r\n                    //安卓63以前有bug，需要兼容\r\n                    for(let key in data){\r\n                        data[key] = typeof data[key] == 'string' ? JSON.parse(data[key]) : data[key]\r\n                    }\r\n                    cb(ok, resolve, data);\r\n                },function(){\r\n                    cb(fail, reject, new Error('获取四级地址失败'));\r\n                });\r\n            }else if(!env.hybrid){\r\n                let _cookie = cookie.parse();\r\n                let _query = query.parse(window.location.search);\r\n                if(_query.cityjson){\r\n                    _query.cityjson = JSON.parse(decodeURIComponent(_query.cityjson))\r\n                    const result = {\r\n                        province: {\r\n                            code: _query.cityjson.cityId,\r\n                            name: _query.cityjson.cityName,\r\n                        },\r\n                        city: {\r\n                            code: _query.cityjson.cityId,\r\n                            name: _query.cityjson.cityName,\r\n                        },\r\n                        district: {\r\n                            code: _query.cityjson.districtId,\r\n                            name: _query.cityjson.districtName,\r\n                        },\r\n                        town: {\r\n                            code: _query.cityjson.townId,\r\n                            name: _query.cityjson.townName,\r\n                        },\r\n                    };\r\n                    cb(ok, resolve, result);\r\n                }else if(_cookie.gps_cityid){\r\n                    const result = {\r\n                        province: {\r\n                            code: _cookie['gps_provinceid'],\r\n                        },\r\n                        city: {\r\n                            code: _cookie['gps_cityid'],  \r\n                        },\r\n                        district: {\r\n                            code: _cookie['gps_districtid'],\r\n                        },\r\n                        town: {\r\n                            code: _cookie['gps_townid'],\r\n                        }\r\n                    };\r\n                    cb(ok, resolve, result);\r\n                }else{\r\n                    //reject(new Error('获取四级地址失败'));\r\n                    const result = {\r\n                        province: {\r\n                            name:'北京',\r\n                            code: '13000000'\r\n                        },\r\n                        city: {\r\n                            name:'北京市',\r\n                            code: '13020000'\r\n                        },\r\n                        district: {\r\n                            name:'朝阳区(五环里)',\r\n                            code: '11010200'\r\n                        },\r\n                        town: {\r\n                            name:'全部区域',\r\n                            code: '110102001'\r\n                        }\r\n                    };\r\n                    cb(ok, resolve, result);\r\n                }\r\n            }else{\r\n                cb(fail, reject, new Error('获取四级地址失败'))\r\n            }\r\n        }));\r\n    }\r\n    //has been deprecatd\r\n    //大概72版本开始不需要再使用\r\n    getEnv (ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(env.hybrid){\r\n                navigator.gome.util.nativeUtils.getAppEnvironment(function(data){\r\n                    data = typeof data == 'string' ? JSON.parse(data) : data\r\n                    data.environment = data.environment.toLowerCase();\r\n                    cb(ok, resolve, data);\r\n                })\r\n            }else{\r\n                if(env.live){\r\n                    cb(ok, resolve, {environment:'pro'});\r\n                }else{\r\n                    cb(ok, resolve, {environment:'uat'});\r\n                }\r\n            }\r\n        }))\r\n    }\r\n    getUserInfo (ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(env.hybrid){\r\n                if(env.gome || (env.gomeplus && !env.plusWebview)){\r\n                    navigator.gome.util.nativeUtils.isLogin(function(data){\r\n                        data = typeof data == 'string' ? JSON.parse(data) : data\r\n                        if(data.isLogin == 'Y'){\r\n                            navigator.gome.util.nativeUtils.getUserInfo(function(data){\r\n                                data = typeof data == 'string' ? JSON.parse(data) : data\r\n                                cb(ok, resolve, data, false)\r\n                            },function(){\r\n                                cb(fail, reject, new Error('获取用户信息失败'))\r\n                            })\r\n                        }else{\r\n                            cb(fail, reject, new Error('获取用户信息失败'))\r\n                        }\r\n                    },function(){\r\n                        cb(fail, reject, new Error('获取用户信息失败'))\r\n                    });\r\n                }else if(env.gomeplus && env.plusWebview){\r\n                    if(this._userInfo){\r\n                        cb(ok, resolve, this._userInfo);\r\n                    }else{\r\n                        cb(fail, reject, new Error('获取用户信息失败'))\r\n                    }\r\n                }\r\n            }else{\r\n                http({\r\n                    type: 'jsonp',\r\n                    url: host.m + '/active/userAgent',\r\n                    data: query.parse(location.search) || {},\r\n                    cb: 'jsoncallback',\r\n                    isPostBody: 'Y',\r\n                    isNeedLoading: 'N'\r\n                })\r\n                .then(function(data){\r\n                    if(data.islogin == 'Y'){\r\n                        cb(ok, resolve, {\r\n                            profileId: data.uid,\r\n                            userName: data.loginName,\r\n                        }, false)\r\n                    }else{\r\n                        cb(fail, reject, new Error('请先登录'))\r\n                    }\r\n                })\r\n            }\r\n        }));\r\n    }\r\n    getVersion (ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(version != -1){\r\n                cb(ok, resolve, version)\r\n            }else if(env.hybrid){\r\n                navigator.gome.util.nativeUtils.getAppVersion(function(data){\r\n                    data = typeof data == 'string' ? JSON.parse(data) : data;\r\n                    cb(ok, resolve, parseInt(data.dev_version));\r\n                });\r\n            }else{\r\n                cb(ok, resolve, version)\r\n            }\r\n        }));\r\n    }\r\n    getUniqueId (ok, fail) {\r\n        return Promise.resolve(new Promise(function(resolve, reject){\r\n            if(env.wap){\r\n                try{\r\n                    cb(ok, resolve, cookie.parse()['__clickidc'])\r\n                }catch(e){\r\n                    cb(ok, resolve, '')\r\n                    //reject(new Error('获取设备标识失败'))\r\n                }\r\n            }else if(env.hybrid){\r\n                if(env.dev){\r\n                    cb(ok, resolve, '1234567890');\r\n                }else{\r\n                    try{\r\n                        let uid = ''\r\n                        if(system.android){\r\n                            uid = navigator.userAgent.match(/gome\\/\\d*\\/([\\w\\-\\d]*)\\//)[1]\r\n                        }\r\n                        else if(system.ios)\r\n                            uid = navigator.userAgent.match(/gome\\/iphone\\/\\d*\\/([\\w\\-\\d]*)\\//)[1]\r\n                        cb(ok, resolve, uid)\r\n                    }catch(e){\r\n                        cb(ok, resolve, '')\r\n                        //reject(new Error('获取设备标识失败'))\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    http0 (opt, ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(env.hybrid){\r\n                opt.type = opt.type.toUpperCase();\r\n                navigator.gome.util.nativeRequest.sendNativeLayoutRequest(function(data){\r\n                    if(typeof data == 'string')\r\n                        data = data.replace(/\\n/g,'');\r\n                    data = typeof data === 'string' ? JSON.parse(data) : data\r\n                    if(data.isSuccess){\r\n                        if(data.isSuccess == 'N'){\r\n                            cb(fail, reject, new Error(e.failReason || '请求失败'));\r\n                        }else{\r\n                            cb(ok, resolve, data);\r\n                        }\r\n                    }else{\r\n                        cb(ok, resolve, data);\r\n                    }\r\n                },function(e){\r\n                    try{\r\n                        e = typeof e === 'string' ? JSON.parse(e) : e\r\n                        cb(fail, reject, new Error(e.failReason || '请求失败'));\r\n                    }catch(_e){\r\n                        cb(fail, reject, new Error('请求失败'))\r\n                    }\r\n                }, this.mixin(opt,{\r\n                    param: opt.data,\r\n                    isNeedLoading: 'Y',\r\n                }))\r\n            }else{\r\n                opt.data.keyProms = document.querySelector('input#keyProms').value;\r\n                opt.type = 'jsonp';\r\n                http(this.mixin(opt,{\r\n                    param: opt.data,\r\n                    isNeedLoading: 'Y',\r\n                })).then(function(data){\r\n                    cb(ok, resolve, data);\r\n                }).catch(function(){\r\n                    cb(fail, reject, new Error('请求失败'))\r\n                })\r\n            }\r\n        }))\r\n    }\r\n    login (opt, ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(!env.app && env.wap){\r\n                //纯浏览器\r\n                window.location.href = this.host.m + '/login.html?return_url=' + Base64.encode(window.location.href);\r\n            }else if(env.app){\r\n                //app内嵌\r\n                if(env.hybrid){\r\n                    navigator.gome.app.nativeLogin.jumpToNativeLogin(function(data){\r\n                        data = typeof data === 'string' ? JSON.parse(data) : data\r\n                        if(data.jumpToNativeLogin == 'Y'){\r\n                            cb(ok, resolve)\r\n                        }else{\r\n                            cb(fail, reject)\r\n                        }\r\n                    },function(){\r\n                        cb(fail, reject)\r\n                    })\r\n                }else if(env.gome || (env.gomeplus && !env.plusWebview)){\r\n                    //在线app， 或新plus app，但容器为在线的webview\r\n                    if(!window.location.href.match(/nlg\\=1/)){\r\n                        window.location.href = window.location.origin + window.location.pathname + '?nlg=1'\r\n                    }\r\n                    cb(ok, resolve)\r\n                }else if(env.gomeplus && env.plusWebview){\r\n                    //新plus app，但容器为plus的webview\r\n                    //兼容美信的jsbridge\r\n                    window.AppInterface.call('/common/login',{\r\n                        type         : opt ? (opt.type || '')       : '',\r\n                        activityId   : opt ? (opt.activityId || '') : '',\r\n                        channelId    : opt ? (opt.channelId || '')  : '',\r\n                    }, data => {\r\n                        data = typeof data === 'string' ? JSON.parse(data) : data\r\n                        if(data.success == true){\r\n                            this._userInfo = data.data;\r\n                            cb(ok, resolve, data.data);\r\n                        }else{\r\n                            cb(fail, reject, new Error('登录失败'));\r\n                        }\r\n                    });\r\n                }//else{\r\n                    //跳转用scheme，先写上，31版本再说，还不确定呢\r\n                 //   window.location.href = host.m + '/login.html';\r\n               // }\r\n            }\r\n        }))\r\n    }\r\n    logout (ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(env.wap){\r\n                window.location.href = host.m + '/index.php?ctl=ucenter&act=loginOut';\r\n            }else if(env.app){\r\n                if(env.hybrid){\r\n                    navigator.gome.app.nativeLogin.jumpToNativeLogout(function(data){\r\n                        data = typeof data === 'string' ? JSON.parse(data) : data\r\n                        cb(ok, resolve);\r\n                    },function(){\r\n                        cb(ok, reject, new Error('登出失败'));\r\n                    })\r\n                }else{\r\n                    //bridge\r\n                    console.warn('bridge没有登出的方法')\r\n                    cb(ok, resolve);\r\n                }\r\n            }\r\n        }))\r\n    }\r\n    maima (ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(env.hybrid){\r\n                this.getVersion().then(v => {\r\n                    if(v >= 60){\r\n                        navigator.gome.util.nativeUtils.getMeasure(opt)\r\n                        resolve(ok, resolve);\r\n                    }else{\r\n                        navigator.gome.util.nativeUtils.getMeasure(opt.pageName)\r\n                        resolve(ok, resolve);\r\n                    }\r\n                })\r\n            }else{\r\n                cb(ok, resolve)\r\n            }\r\n        }))\r\n    }\r\n    ready (ok, fail) {\r\n        //测试环境下，gomebridge的状态被components接管\r\n        if(env.dev && window.components && components.Config){\r\n            env.wap = components.Config.platform.wap\r\n            env.app = components.Config.platform.app\r\n            env.live = components.Config.platform.live\r\n            env.uat = components.Config.platform.uat\r\n            env.tslive = components.Config.platform.tslive\r\n        }\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            //混合app\r\n            if(env.hybrid){\r\n                document.addEventListener('deviceready',function(){\r\n                    cb(ok, resolve);\r\n                });\r\n            }else if(env.app && !env.plusWebview){\r\n            //webview嵌套，且不论处于哪个app容器中\r\n            //只要是原国美在线webview的话\r\n            //就走这个分支\r\n                if(env.dev){\r\n                    cb(ok, resolve);\r\n                }\r\n                if(system.android){\r\n                    let cnt = 0;\r\n                    const interval = setInterval(() => {\r\n                        if(window.bridge){\r\n                            this.deprecated._setBridge(bridge);\r\n                            cb(ok, resolve);\r\n                            clearInterval(interval);\r\n                        }\r\n                        if(cnt == 100){\r\n                            reject(new Error('10秒内bridge未初始化成功'))\r\n                            clearInterval(interval);\r\n                        }\r\n                        cnt++;\r\n                    },100);\r\n                }else if(system.ios){\r\n                    function connectWebViewJavascriptBridge(callback) {\r\n                        if (window.WebViewJavascriptBridge) {\r\n                            callback(WebViewJavascriptBridge)\r\n                        } else {\r\n                            document.addEventListener('WebViewJavascriptBridgeReady', function() {\r\n                                callback(WebViewJavascriptBridge)\r\n                            }, false)\r\n                        }\r\n                    }\r\n                    connectWebViewJavascriptBridge(bridge => {\r\n                        this.deprecated._setBridge(bridge);\r\n                        cb(ok, resolve);\r\n                    })\r\n                }\r\n            }else if(env.app && env.gomeplus && env.plusWebview){\r\n                //webview嵌套，且处于美信webview中\r\n                /*\r\n                let cnt = 0;\r\n                const interval = setInterval(function(){\r\n                    if(window.AppInterface){\r\n                        cb(ok, resolve);\r\n                        clearInterval(interval);\r\n                    }\r\n                    if(cnt == 100){\r\n                        cb(fail, reject, new Error('10秒内AppInterface未初始化成功'))\r\n                        clearInterval(interval);\r\n                    }\r\n                    cnt++;\r\n                }.bind(this),100);\r\n                */\r\n                //plus原生webview中使用domeready\r\n                document.addEventListener('DOMContentLoaded',function(){\r\n                    cb(ok, resolve);\r\n                });\r\n            }else if(env.wap && !env.app){\r\n            //处于浏览器中\r\n                if(document.readyState == 'interactive' || document.readyState == 'complete'){\r\n                    cb(ok, resolve);\r\n                }else{\r\n                    document.addEventListener('DOMContentLoaded',function(){\r\n                        cb(ok, resolve);\r\n                    });\r\n                }\r\n            }\r\n        }))\r\n    }\r\n    setTitle (title, ok, fail) {\r\n        return Promise.resolve(new Promise(function(resolve, reject){\r\n            if(env.hybrid){\r\n                if(title){\r\n                    navigator.gome.util.nativeUtils.showTitle(title);\r\n                }\r\n            }\r\n            cb(ok, resolve)\r\n        }));\r\n    }\r\n    setShareInfo (opt, ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            this.mixin(opt, {\r\n                type: 'button',\r\n                isShow: 'Y',\r\n                title: '',\r\n                shareDesc: '',\r\n                imageUrl: '',\r\n                link: '',\r\n                position: 'L',\r\n                method: 'goBack',\r\n            })\r\n            if(env.app){\r\n                if(env.hybrid){\r\n                    if(navigator.userAgent.match(/gomeplus/)){\r\n                        let shareParams = {\r\n                            'shareDesc': opt.shareDesc ||　'',\r\n                            'shareUrl': opt.link || '',\r\n                            'shareImageUrl': opt.imageUrl || '',\r\n                            'title': opt.title || '',\r\n                        };\r\n                        if(env.gomeplus && env.plusWebview && version >= 30){\r\n                            shareParams.sharePlatform = opt.sharePlatform || '0,2,3'\r\n                        }\r\n                        navigator.gome.util.nativeUtils.shareLink(shareParams);      \r\n                    }else{\r\n                        if(opt.link && navigator.gome.util.nativeUtils.shareLink){\r\n                            this.getVersion().then(function(v){\r\n                                if(v >= 60){\r\n                                    navigator.gome.util.nativeUtils.shareLink({\r\n                                        'shareDesc': opt.shareDesc ||　'',\r\n                                        'shareUrl': opt.link || '',\r\n                                        'shareImageUrl': opt.imageUrl || '',\r\n                                        'title': opt.title || '',\r\n                                    })        \r\n                                }\r\n                                cb(ok, resolve)\r\n                            })\r\n                        }else{\r\n                            cb(fail, reject)\r\n                        }  \r\n                    }\r\n                }else if(env.gome || (env.gomeplus && !env.plusWebview)){\r\n                //此处判断env.gome为判断在gome环境中\r\n                //env.gomeplus && !env.plusWebview为判断融合app中非plusWebview的情况\r\n                    const method = {\r\n                        docObject:[{\r\n                                type: opt.type,\r\n                                is_show: opt.isShow,\r\n                                title: opt.title,\r\n                                share_desc: opt.shareDesc,\r\n                                image_url: opt.imageUrl,\r\n                                link: opt.link,\r\n                                position: opt.position,\r\n                                method: opt.method,\r\n                            }]\r\n                    }\r\n                    //容错\r\n                    if(env.gomeplus && env.plusWebview && version >= 30){\r\n                        method.docObject[0].sharePlatform = opt.sharePlatform || '0,2,3'\r\n                    }\r\n                    if(this.system.ios && window.location.pathname.match(/shop-\\d+\\.html/)){\r\n                        this.deprecated._bridge.send(JSON.stringify(method))\r\n                    }else{\r\n                        this.deprecated.send(method);\r\n                    }\r\n                    cb(ok, resolve)\r\n                }\r\n            }else{\r\n                cb(ok, resolve)\r\n            }\r\n        }))\r\n    }\r\n    toast (data, ok, fail) {\r\n        return Promise.resolve(new Promise((resolve, reject) => {\r\n            if(env.hybrid){\r\n                navigator.gome.util.nativeUtils.showToast(data);\r\n            }else{\r\n                eventbus.emit('toast', data);\r\n                eventbus.emitDOM('toast', data);\r\n            }\r\n            setTimeout(() => {\r\n                cb(ok, resolve);\r\n            }, 1000)\r\n        }))\r\n    }\r\n}\r\n\r\nmodule.exports = new GomeJSBridge;\n\n\n// WEBPACK FOOTER //\n// node_modules/gome-bridge/index.js"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AATA;AAYA;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnEA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;;;;;;;;ACPA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAoBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;;;;;;;;;;;;;;;;;;ACjQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;ACvEA;;;;;;;;AAMA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}